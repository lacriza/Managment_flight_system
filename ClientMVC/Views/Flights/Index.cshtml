@model ClientMVC.Models.PagedResponse<ClientMVC.Models.FlightViewModel>

@{
  ViewData["Title"] = "Index";
}

<div class="container">
  <div class="row align-items-center">
    <div class="col-12 col-md-5 col-lg-6 order-md-2">

      <!-- Image -->
      <img src="@Url.Content("~/Content/Images/undraw_connected_world_wuay.svg")" class="img-fluid mw-md-150 mw-lg-130 mb-6 mb-md-0 aos-init aos-animate" alt="..." data-aos="fade-up" data-aos-delay="100">

    </div>
    <div class="col-12 col-md-7 col-lg-6 order-md-1 aos-init aos-animate" data-aos="fade-up">

      <!-- Heading -->
      <h2 class="display-4 text-center text-md-start">
        Welcome to <span class="main-color">Flight</span> Managment System.
      </h2>

      <!-- Text -->
      <p class="lead text-center text-md-start text-muted mb-6 mb-lg-8">
        Filter, add flight, update flight details.
      </p>

      <!-- Button -->
      <div class="text-center text-md-start">
        <a class="btn btn-navy shadow lift me-1 btn-lg " asp-action="Add">Add flight</a>
        @*@Html.ActionLink("Add flight", "Add", "Flights", new { }, new { @class = "btn btn-navy shadow lift me-1 btn-lg" })*@
      </div>

    </div>
  </div> <!-- / .row -->
</div>

<div class="row">
  <div class="col-lg-1">  </div>
    <div class="col-11 col-md-9 col-lg-8 order-2 order-lg-1 ml-3">
      <div class="mt-3 mb-1 ">
        @if (Model != null)
        {
          if (Model.Data.Count == 0)
          {
            @await Html.PartialAsync("~/Views/Shared/_Partial404.cshtml")
          }
          else
          {
            @foreach (var item in Model?.Data)
            {
              @await Html.PartialAsync("_PartialFligtItem.cshtml", item)
            }
          }
        }

        <!-- Pagination -->
        <ul class="pagination float-right">
          @for (int i = 1; i < Model?.TotalPages; i++)
          {

            @if (i == 1 && Model.PreviousPage)
            {
              <li class="page-item">
                @Html.ActionLink("Previous", "Index", "Flights",
                 new PagingRequest()
                 {
                   PageNumber = @i - 1,
                 },
                 new { @class = "page-link" })
              </li>
            }

            if (Model.PageNumber == i)
            {
              <li class="page-item active ">
                @Html.ActionLink(@i.ToString(), "Index", "Flights",
                  new PagingRequest()
                  {
                    PageNumber = @i,
                  },
                  new { @class = "page-link" })
              </li>
            }
            else
            {
              <li class="page-item ">
                @Html.ActionLink(@i.ToString(), "Index", "Flights",
                  new PagingRequest()
                  {
                    PageNumber = @i,
                  },
                  new { @class = "page-link" })
              </li>
            }


            @if (i == Model.TotalPages - 1 && Model.NextPage)
            {
              <li class="page-item">
                @Html.ActionLink("Next", "Index", "Flights",
                 new PagingRequest()
                 {
                   PageNumber = @i + 1,
                 },
                 new { @class = "page-link" })
              </li>
            }
          }
        </ul>
        <!-- / Pagination -->
      </div>
    </div>
    <div class="col-11 col-md-2 col-lg-2 order-1 order-lg-2 ml-3">
      @await Html.PartialAsync("_PartialFilters.cshtml", new FiltersRequest())
    </div>
  </div>
